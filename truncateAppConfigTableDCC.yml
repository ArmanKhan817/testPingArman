---
- name: Sync APPLICATION_CONFIG via linked server with XML column workaround
  hosts: all
  gather_facts: yes
  vars:
    ansible_become_user: "{{ username }}"
    ansible_become_pass: "{{ password }}"
    sql_user: sa
    sql_pass: Dym428!
  tasks:
    - name: Build SQL query with XML column cast
      set_fact:
        sql_query: |
          TRUNCATE TABLE poslocal.dbo.APPLICATION_CONFIG;
          INSERT INTO dbo.APPLICATION_CONFIG (
            [key], application, target, branch_no, all_branches_yn,
            workstation_no, configuration, last_modified
          )
          SELECT 
            [key], application, target, branch_no, all_branches_yn,
            workstation_no, CAST(configuration AS NVARCHAR(MAX)) AS configuration, last_modified
          FROM OPENQUERY([{{ survey_ip }}SVR], '
            SELECT 
              [key], application, target, branch_no, all_branches_yn,
              workstation_no, CAST(configuration AS NVARCHAR(MAX)) AS configuration, last_modified
            FROM poslocal.dbo.APPLICATION_CONFIG
          ');

    - name: Execute SQL query on local SQL Server using sqlcmd
      win_shell: |
        $Query = @"
        {{ sql_query }}
        "@

        sqlcmd -S localhost -U "{{ sql_user }}" -P "{{ sql_pass }}" -d poslocal -Q $Query
      register: sql_execution
      ignore_errors: yes
      changed_when: "'rows affected' in sql_execution.stdout or sql_execution.rc == 0"

    - name: Show SQL execution output
      ansible.builtin.debug:
        var: sql_execution.stdout
  become: yes
  become_method: runas
  become_flags: logon_type=new_credentials logon_flags=netcredentials_only
